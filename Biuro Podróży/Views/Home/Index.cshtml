@using Microsoft.AspNetCore.Http;
@model IEnumerable<Biuro_Podróży.Models.Wycieczka>
@{
    ViewData["Title"] = "Strona Główna";
}

    <div class="jumbotron">
        <div class="row" style="width:100%;">
            <div class="col-lg-1">
                <canvas id="canvas">
                </canvas>
            </div>
            <div class="col-lg-11">
                <h2>Zapoznaj się z naszą ofertą !!!</h2>
                <h4>Przygotowaliśmy Tobie niesamowite kierunki podróży !!!<br />Zarezerwuj wycieczkę już teraz !!!</h4>
            </div>
        </div>
    </div>

@{
    int i = 0;
    @foreach (var wycieczka in Model)
    {
        @if (i < 4)
        {
            <div class="responsive">
                <div class="gallery">
                    <a asp-action="Details" asp-controller="Wycieczka" asp-route-id="@wycieczka.Id_wycieczki">
                        <div style="height:300px">
                            <img src="data:image/jpg;base64,@Convert.ToBase64String(wycieczka.Image)" alt="Cinque Terre" style="height:100%; width:100%">
                        </div>
                    </a>
                    <div class="desc">
                        <span class="travel-direction-word">kierunek &rarr;</span>
                        <span class="travel-direction-body">@wycieczka.Miejsce</span>
                        <br />
                        <span class="travel-direction-word">cena &rarr;</span>
                        <span class="travel-direction-body">@wycieczka.Cena zł</span>
                    </div>
                </div>
            </div>
        }
        i++;
    }
}
<div class="clearfix"></div>
<a asp-action="Index" asp-controller="Wycieczka" class="btn btn-primary" style="margin-top:2vw; margin-left: 80%;">Zobacz naszą ofertę &rarr;</a>
@section Scripts
{
    <link href="~/css/index.css" rel="stylesheet" />
}


<script>
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext("2d");
        var radius = canvas.height / 2;
        ctx.translate(radius, radius);
        radius = radius * 0.90
        setInterval(drawClock, 1000);

        function drawClock() {
            drawFace(ctx, radius);
            drawNumbers(ctx, radius);
            drawTime(ctx, radius);
        }

        function drawFace(ctx, radius) {
            var grad;
            ctx.beginPath();
            ctx.arc(0, 0, radius, 0, 2 * Math.PI);
            ctx.fillStyle = 'white';
            ctx.fill();
            grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
            grad.addColorStop(0, '#333');
            grad.addColorStop(0.5, 'white');
            grad.addColorStop(1, '#333');
            ctx.strokeStyle = grad;
            ctx.lineWidth = radius * 0.1;
            ctx.stroke();
            ctx.beginPath();
            ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
            ctx.fillStyle = '#333';
            ctx.fill();
        }

        function drawNumbers(ctx, radius) {
            var ang;
            var num;
            ctx.font = radius * 0.15 + "px arial";
            ctx.textBaseline = "middle";
            ctx.textAlign = "center";
            for (num = 1; num < 13; num++) {
                ang = num * Math.PI / 6;
                ctx.rotate(ang);
                ctx.translate(0, -radius * 0.85);
                ctx.rotate(-ang);
                ctx.fillText(num.toString(), 0, 0);
                ctx.rotate(ang);
                ctx.translate(0, radius * 0.85);
                ctx.rotate(-ang);
            }
        }

        function drawTime(ctx, radius) {
            var now = new Date();
            var hour = now.getHours();
            var minute = now.getMinutes();
            var second = now.getSeconds();
            //hour
            hour = hour % 12;
            hour = (hour * Math.PI / 6) +
                (minute * Math.PI / (6 * 60)) +
                (second * Math.PI / (360 * 60));
            drawHand(ctx, hour, radius * 0.5, radius * 0.07);
            //minute
            minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
            drawHand(ctx, minute, radius * 0.8, radius * 0.07);
            // second
            second = (second * Math.PI / 30);
            drawHand(ctx, second, radius * 0.9, radius * 0.02);
        }

        function drawHand(ctx, pos, length, width) {
            ctx.beginPath();
            ctx.lineWidth = width;
            ctx.lineCap = "round";
            ctx.moveTo(0, 0);
            ctx.rotate(pos);
            ctx.lineTo(0, -length);
            ctx.stroke();
            ctx.rotate(-pos);
    }

</script>
